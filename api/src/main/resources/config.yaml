kumuluzee:
  name: trip-processor-service
  env:
    name: dev
  version: 1.0.0
  server:
    base-url: http://localhost:8080
    http:
      port: 8080
  datasources:
    - jndi-name: jdbc/TripDataDS
      connection-url: jdbc:postgresql://0.0.0.0:5432/trip-data
      username: dbuser
      password: postgres
      pool:
        max-size: 5
    - jndi-name: jdbc/AnswerDataDS
      connection-url: jdbc:postgresql://0.0.0.0:5434/answer-data
      username: dbuser
      password: postgres
      pool:
        max-size: 5
    - jndi-name: jdbc/AnalyzedtripDataDS
      connection-url: jdbc:postgresql://0.0.0.0:5435/analyzed-trip-data
      username: dbuser
      password: postgres
      pool:
        max-size: 5
  config:
    consul:
      agent: http://52.224.38.169:80
  health:
    checks:
      data-source-health-check:
        - jndi-name: jdbc/TripDataDS
        - jndi-name: jdbc/AnswerDataDS
        - jndi-name: jdbc/AnalyzedtripDataDS
      kafka-health-check:
        bootstrap-servers: rocket-01.srvs.cloudkafka.com:9094
        minimum-available-nodes: 1
        request-timeout-ms: 1000
      http-health-check:
        - connection-url: https://roads.googleapis.com/v1/snapToRoads
        - connection-url: https://maps.googleapis.com/maps/api/geocode/json
  metrics:
    web-instrumentation:
      - name: processor-endpoint
        url-pattern: /v1/process
  rest-client:
    registrations:
      - class: snap-to-roads-api
        url: https://roads.googleapis.com/v1/snapToRoads
        connect-timeout: 5000
        read-timeout: 5000
      - class: reverse-geocoding-api
        url: https://maps.googleapis.com/maps/api/geocode/json
        connect-timeout: 5000
        read-timeout: 5000
  streaming:
    kafka:
      consumer:
        bootstrap-servers: rocket-01.srvs.cloudkafka.com:9094
        group-id: group1
        enable-auto-commit: true
        auto-commit-interval-ms: 1000
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        security-protocol: SASL_SSL
        sasl-mechanism: SCRAM-SHA-256
        sasl-jaas-config: 'org.apache.kafka.common.security.scram.ScramLoginModule required username="hus39ssl" password="h8UPiqVSJZzGlTpbXQ4Yl4vC2Y_Zi1Jo";'
rest-properties:
  config:
    broken: false
    score-multiplier: 10
app-properties:
  google-api-key: API_KEY_GOES_HERE
streaming-properties:
  processing-topic: hus39ssl-trips_processing
